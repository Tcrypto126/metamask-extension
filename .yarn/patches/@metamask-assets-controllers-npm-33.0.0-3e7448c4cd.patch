diff --git a/dist/chunk-FGAZXVKS.js b/dist/chunk-FGAZXVKS.js
index 4a6aa7918599269951044b9f8c7c076a7fe6a9c7..4c1054a867ff6aef1e26f8d84e2831f234c4e44e 100644
--- a/dist/chunk-FGAZXVKS.js
+++ b/dist/chunk-FGAZXVKS.js
@@ -503,6 +503,7 @@ fetchAndMapExchangeRatesForUnsupportedNativeCurrency_fn = async function({
   if (fallbackCurrencyToNativeCurrencyConversionRate === null) {
     return {};
   }
+  const convertFallbackToNative = (value) => value !== void 0 && value !== null ? value * fallbackCurrencyToNativeCurrencyConversionRate : void 0;
   const updatedContractExchangeRates = Object.entries(
     contractExchangeInformations
   ).reduce((acc, [tokenAddress, token]) => {
@@ -510,7 +511,15 @@ fetchAndMapExchangeRatesForUnsupportedNativeCurrency_fn = async function({
       ...acc,
       [tokenAddress]: {
         ...token,
-        price: token.price ? token.price * fallbackCurrencyToNativeCurrencyConversionRate : void 0
+        currency: nativeCurrency,
+        price: convertFallbackToNative(token.price),
+        marketCap: convertFallbackToNative(token.marketCap),
+        allTimeHigh: convertFallbackToNative(token.allTimeHigh),
+        allTimeLow: convertFallbackToNative(token.allTimeLow),
+        totalVolume: convertFallbackToNative(token.totalVolume),
+        high1d: convertFallbackToNative(token.high1d),
+        low1d: convertFallbackToNative(token.low1d),
+        dilutedMarketCap: convertFallbackToNative(token.dilutedMarketCap)
       }
     };
     return acc;
diff --git a/dist/chunk-P3O5CVAH.mjs b/dist/chunk-P3O5CVAH.mjs
index 32379704450baee58a37623b1d0f6b471e69de2e..069c3deec15ad85057c910ecf0db31d856fd6ae2 100644
--- a/dist/chunk-P3O5CVAH.mjs
+++ b/dist/chunk-P3O5CVAH.mjs
@@ -503,6 +503,7 @@ fetchAndMapExchangeRatesForUnsupportedNativeCurrency_fn = async function({
   if (fallbackCurrencyToNativeCurrencyConversionRate === null) {
     return {};
   }
+  const convertFallbackToNative = (value) => value !== void 0 && value !== null ? value * fallbackCurrencyToNativeCurrencyConversionRate : void 0;
   const updatedContractExchangeRates = Object.entries(
     contractExchangeInformations
   ).reduce((acc, [tokenAddress, token]) => {
@@ -510,7 +511,15 @@ fetchAndMapExchangeRatesForUnsupportedNativeCurrency_fn = async function({
       ...acc,
       [tokenAddress]: {
         ...token,
-        price: token.price ? token.price * fallbackCurrencyToNativeCurrencyConversionRate : void 0
+        currency: nativeCurrency,
+        price: convertFallbackToNative(token.price),
+        marketCap: convertFallbackToNative(token.marketCap),
+        allTimeHigh: convertFallbackToNative(token.allTimeHigh),
+        allTimeLow: convertFallbackToNative(token.allTimeLow),
+        totalVolume: convertFallbackToNative(token.totalVolume),
+        high1d: convertFallbackToNative(token.high1d),
+        low1d: convertFallbackToNative(token.low1d),
+        dilutedMarketCap: convertFallbackToNative(token.dilutedMarketCap)
       }
     };
     return acc;
